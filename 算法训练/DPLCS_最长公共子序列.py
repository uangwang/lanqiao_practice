# 最长公共子序列
# 给定一个长度为N的数组a和一个长度为M的数组b，求它们的最长公共子序列的长度。
# 公共子序列：数组a和b种均包含该子序列
# 状态dp[i][j]表示a的前i个元素和b的前j个元素的最长公共子序列的长度
# 最终答案是dp[N][M]
# 边界条件：dp[0][j] = 0, dp[i][0] = 0
"""
状态转移方程：
1. a[i] == b[j]，dp[i][j] = dp[i-1][j-1] + 1
2. a[i] != b[j]，dp[i][j] = max(dp[i-1][j], dp[i][j-1])
"""
"""
如何求出具体的公共子序列：
从(n,m)往回走，如果往上，往左dp值不变，则直接走
否则往左上方走 
"""